description: PACS Dataset

target:
  service: philly
  # which virtual cluster you belong to (msrlabs, etc.). Everyone has access to "msrlabs".
  vc: resrchvc 
  # physical cluster to use (cam, gcr, rr1, rr2) or Azure clusters (eu1, eu2, etc.)
  cluster: rr1

environment:
  image: pytorch/pytorch:1.5-cuda10.1-cudnn7-devel
  setup:
    - pip install --user -r requirements.txt
    
code:
  # local directory of the code. this will be uploaded to the server.
  # $CONFIG_DIR is expanded to the directory of this config file
  local_dir: $CONFIG_DIR

data:
    local_dir: $CONFIG_DIR/data/datasets/
    remote_dir: data/datasets/
    
# list of jobs to run, we run 2 jobs in this example
jobs:
  # name must be unique across the jobs
- name: photo_ctr_r18
  # one gpu
  sku: G1
  command:
  - echo "--debug" && python train.py --dataset pacs --method_name matchdg_ctr --match_case 0.01 --match_flag 1 --epochs 50 --batch_size 256 --pos_metric cos --train_domains art_painting cartoon sketch --test_domains photo --out_classes 7 --perfect_match 0 --img_c 3 --pre_trained 1 --model_name resnet18 --os_env 1
  
# - name: art_painting_ctr_r18
#   # one gpu
#   sku: G1
#   command:
#   - echo "--debug" && python train.py --dataset pacs --method_name matchdg_ctr --match_case 0.01 --match_flag 1 --epochs 50 --batch_size 256 --pos_metric cos --train_domains photo cartoon sketch --test_domains art_painting --out_classes 7 --perfect_match 0 --img_c 3 --pre_trained 1 --model_name resnet18 --os_env 1
  
- name: cartoon_ctr_r18
  # one gpu
  sku: G1
  command:
  - echo "--debug" && python train.py --dataset pacs --method_name matchdg_ctr --match_case 0.01 --match_flag 1 --epochs 50 --batch_size 256 --pos_metric cos --train_domains photo art_painting sketch --test_domains cartoon --out_classes 7 --perfect_match 0 --img_c 3 --pre_trained 1 --model_name resnet18 --os_env 1

- name: sketch_ctr_r18
  # one gpu
  sku: G1
  command:
  - echo "--debug" && python train.py --dataset pacs --method_name matchdg_ctr --match_case 0.01 --match_flag 1 --epochs 50 --batch_size 256 --pos_metric cos --train_domains photo art_painting cartoon --test_domains sketch --out_classes 7 --perfect_match 0 --img_c 3 --pre_trained 1 --model_name resnet18 --os_env 1
  
  
- name: photo_ctr_r50
  # one gpu
  sku: G1
  command:
  - echo "--debug" && python train.py --dataset pacs --method_name matchdg_ctr --match_case 0.01 --match_flag 1 --epochs 50 --batch_size 64 --pos_metric cos --train_domains art_painting cartoon sketch --test_domains photo --out_classes 7 --perfect_match 0 --img_c 3 --pre_trained 1 --model_name resnet50 --os_env 1
  
- name: art_painting_ctr_r50
  # one gpu
  sku: G1
  command:
  - echo "--debug" && python train.py --dataset pacs --method_name matchdg_ctr --match_case 0.01 --match_flag 1 --epochs 50 --batch_size 64 --pos_metric cos --train_domains photo cartoon sketch --test_domains art_painting --out_classes 7 --perfect_match 0 --img_c 3 --pre_trained 1 --model_name resnet50 --os_env 1
  
- name: cartoon_ctr_r50
  # one gpu
  sku: G1
  command:
  - echo "--debug" && python train.py --dataset pacs --method_name matchdg_ctr --match_case 0.01 --match_flag 1 --epochs 50 --batch_size 64 --pos_metric cos --train_domains photo art_painting sketch --test_domains cartoon --out_classes 7 --perfect_match 0 --img_c 3 --pre_trained 1 --model_name resnet50 --os_env 1

- name: sketch_ctr_r50
  # one gpu
  sku: G1
  command:
  - echo "--debug" && python train.py --dataset pacs --method_name matchdg_ctr --match_case 0.01 --match_flag 1 --epochs 50 --batch_size 64 --pos_metric cos --train_domains photo art_painting cartoon --test_domains sketch --out_classes 7 --perfect_match 0 --img_c 3 --pre_trained 1 --model_name resnet50 --os_env 1